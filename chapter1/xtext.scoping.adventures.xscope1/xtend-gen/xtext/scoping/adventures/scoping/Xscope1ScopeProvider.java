/**
 * generated by Xtext
 */
package xtext.scoping.adventures.scoping;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.Scopes;
import xtext.scoping.adventures.xscope1.Program;
import xtext.scoping.adventures.xscope1.Statement;
import xtext.scoping.adventures.xscope1.Variable;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it
 */
@SuppressWarnings("all")
public class Xscope1ScopeProvider implements IScopeProvider {
  public IScope getScope(final EObject context, final EReference reference) {
    EObject _rootContainer = EcoreUtil.getRootContainer(context);
    final Program root = ((Program) _rootContainer);
    EList<Statement> _statements = root.getStatements();
    final Iterable<Variable> vars = Iterables.<Variable>filter(_statements, Variable.class);
    final IScope scope = Scopes.scopeFor(vars);
    return scope;
  }
}
