/*
 * generated by Xtext
 */
package xtext.scoping.adventures.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import xtext.scoping.adventures.xscope1.Program
import org.eclipse.emf.ecore.util.EcoreUtil
import xtext.scoping.adventures.xscope1.Variable
import org.eclipse.xtext.scoping.Scopes

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
//class Xscope1ScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
class Xscope1ScopeProvider implements org.eclipse.xtext.scoping.IScopeProvider {
	
	override getScope(EObject context, EReference reference) {
		val Program root = EcoreUtil.getRootContainer(context) as Program
		val vars=root.statements.filter(typeof(Variable))
	
		val scope=Scopes::scopeFor(vars)
 		return scope
	}
	
}
